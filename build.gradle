plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.zf'
version = '0.1'
sourceCompatibility = '16'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.5.1'
// https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter
    implementation group: 'com.baomidou', name: 'mybatis-plus-boot-starter', version: '3.4.3'
// https://mvnrepository.com/artifact/cn.hutool/hutool-all
    implementation group: 'cn.hutool', name: 'hutool-all', version: '5.6.7'
// https://mvnrepository.com/artifact/com.alibaba/fastjson
    implementation group: 'com.alibaba', name: 'fastjson', version: '1.2.76'
// https://mvnrepository.com/artifact/org.jeecgframework/autopoi-web
    implementation group: 'org.jeecgframework', name: 'autopoi-web', version: '1.3.2'
// https://mvnrepository.com/artifact/com.huaweicloud/esdk-obs-java
    implementation group: 'com.huaweicloud', name: 'esdk-obs-java', version: '3.21.4'
// https://mvnrepository.com/artifact/com.github.xiaoymin/knife4j-spring-boot-starter
    implementation group: 'com.github.xiaoymin', name: 'knife4j-spring-boot-starter', version: '3.0.2'
// https://mvnrepository.com/artifact/org.apache.commons/commons-jexl3
    implementation group: 'org.apache.commons', name: 'commons-jexl3', version: '3.2'

}

test {
    useJUnitPlatform()
}

// 清除现有的lib目录
task clearJar(type: Delete) {
    delete "$buildDir\\libs\\lib"
}

// 将依赖包复制到lib目录
task copyJar(type: Copy, dependsOn: 'clearJar') {
    from configurations.runtimeClasspath
    into "$buildDir\\libs\\lib"
}

bootJar {
    baseName "zf"
    version ""
    // 例外所有的jar
    excludes = ["*.jar"]
    // lib目录的清除和复制任务
    dependsOn clearJar
    dependsOn copyJar

    // 指定依赖包的路径
    manifest {
        attributes "Manifest-Version": 1.0,
                'Class-Path': configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(' ')
    }
}
